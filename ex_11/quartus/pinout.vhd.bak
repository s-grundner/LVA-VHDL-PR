
---------------------------------------------------------
--  This code is generated by Terasic System Builder
---------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

entity PINOUT is
port
(

    ------------ CLOCK ------------
    CLOCK2_50       	:in    	std_logic;
    CLOCK3_50       	:in    	std_logic;
    CLOCK4_50       	:in    	std_logic;
    CLOCK_50        	:in    	std_logic;

    ------------ KEY ------------
    KEY             	:in    	std_logic_vector(3 downto 0);

    ------------ SW ------------
    SW              	:in    	std_logic_vector(9 downto 0);

    ------------ Seg7 ------------
    HEX0            	:out   	std_logic_vector(6 downto 0);
    HEX1            	:out   	std_logic_vector(6 downto 0);
    HEX2            	:out   	std_logic_vector(6 downto 0);
    HEX3            	:out   	std_logic_vector(6 downto 0);
    HEX4            	:out   	std_logic_vector(6 downto 0);
    HEX5            	:out   	std_logic_vector(6 downto 0);

    ------------ GPIO, GPIO connect to GPIO Default ------------
    GPIO            	:inout 	std_logic_vector(35 downto 0)
);

end entity;

---------------------------------------------------------
--  Structural coding
---------------------------------------------------------

architecture rtl of PINOUT is

begin

    tl_ent : entity work.tl
    port map(
        clk_i <= CLOCK_50,      
        rst_i <= KEY(0),

        sw_filter_en_async_i <= SW(0),
        sw_dgb_en_async_i    <= SW(1),
        sw_dbg_axis_async_i  <= SW(2),
        sw_mode_async_i      <= SW(3),
        sw_z_axis_async_i    <= SW(4),

        btn_draw_k_async_i   <= KEY(1),
        btn_inc_async_i      <= KEY(2),
        btn_dec_async_i      <= KEY(3),
        
        x_comp_async_i <= GPIO(33),
        y_comp_async_i <= GPIO(32),

        x_adc_pwm_o <= GPIO(35),
        y_adc_pwm_o <= GPIO(34),

        x_servo_pwm_o <= GPIO(27),
        y_servo_pwm_o <= GPIO(26),
        z_servo_pwm_o <= GPIO(9),

        x_seg_ones_o     <= HEX0,
        x_seg_tens_o     <= HEX1,
        x_seg_hundreds_o <= HEX2,
        y_seg_ones_o     <= HEX3,
        y_seg_tens_o     <= HEX4,
        y_seg_hundreds_o <= HEX5
    );

end rtl;

